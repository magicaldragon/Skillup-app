rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.firebaseUid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher', 'staff']
      );
      allow write: if request.auth != null && (
        request.auth.uid == resource.data.firebaseUid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Classes collection
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
    }
    
    // Levels collection
    match /levels/{levelId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
    }
    
    // Assignments collection
    match /assignments/{assignmentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
    }
    
    // Submissions collection
    match /submissions/{submissionId} {
      allow read: if request.auth != null && (
        resource.data.studentId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.firebaseUid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher']
      );
      allow create: if request.auth != null && 
        request.resource.data.studentId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.firebaseUid;
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
    }
    
    // Potential Students collection
    match /potentialStudents/{potentialStudentId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher', 'staff'];
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher', 'staff'];
    }
    
    // Student Records collection
    match /studentRecords/{recordId} {
      allow read: if request.auth != null && (
        resource.data.studentId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.firebaseUid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher']
      );
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
    }
    
    // Change Logs collection
    match /changeLogs/{logId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'teacher'];
    }
  }
} 